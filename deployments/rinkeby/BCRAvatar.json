{
  "address": "0x43e4E2a5f6a8Aa74032A3A437f227dC34aD9b1C4",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "avatarURI",
          "type": "string"
        }
      ],
      "name": "AvatarCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "avatarURI",
          "type": "string"
        }
      ],
      "name": "AvatarUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "NFTDeRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "NFTRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "profileURI",
          "type": "string"
        }
      ],
      "name": "ProfileCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "profileURI",
          "type": "string"
        }
      ],
      "name": "ProfileUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ServiceDonated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deRegisterNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "donate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "donations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAvatar",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getProfile",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isERC721",
          "type": "bool"
        }
      ],
      "name": "registerNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "avatarHash",
          "type": "string"
        }
      ],
      "name": "setAvatar",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "profileHash",
          "type": "string"
        }
      ],
      "name": "setProfile",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "avatarHash",
          "type": "string"
        }
      ],
      "name": "updateAvatar",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "profileHash",
          "type": "string"
        }
      ],
      "name": "updateProfile",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x8cb02a177b89cc847d0606826aff16a5521fe39675bb2554e267d5bd8cb2b979",
  "receipt": {
    "to": null,
    "from": "0x23ABfdBd2535aC77ea60a078707a9e5820b0Fff2",
    "contractAddress": "0x43e4E2a5f6a8Aa74032A3A437f227dC34aD9b1C4",
    "transactionIndex": 11,
    "gasUsed": "1722368",
    "logsBloom": "0x
    "blockHash": "0x52dfb7ebede885e9e127cbcad5d871124a3c96c7c2f49c0ec37ab072e44e5385",
    "transactionHash": "0x8cb02a177b89cc847d0606826aff16a5521fe39675bb2554e267d5bd8cb2b979",
    "logs": [
      {
        "transactionIndex": 11,
        "blockNumber": 8965197,
        "transactionHash": "0x8cb02a177b89cc847d0606826aff16a5521fe39675bb2554e267d5bd8cb2b979",
        "address": "0x43e4E2a5f6a8Aa74032A3A437f227dC34aD9b1C4",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000023abfdbd2535ac77ea60a078707a9e5820b0fff2"
        ],
        "data": "0x",
        "logIndex": 17,
        "blockHash": "0x52dfb7ebede885e9e127cbcad5d871124a3c96c7c2f49c0ec37ab072e44e5385"
      }
    ],
    "blockNumber": 8965197,
    "cumulativeGasUsed": "2857800",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "https://ipfs.io/ipfs/"
  ],
  "solcInputHash": "2cc8f6071be6601258046d4ad5cee9d4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"avatarURI\",\"type\":\"string\"}],\"name\":\"AvatarCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"avatarURI\",\"type\":\"string\"}],\"name\":\"AvatarUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NFTDeRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NFTRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"profileURI\",\"type\":\"string\"}],\"name\":\"ProfileCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"profileURI\",\"type\":\"string\"}],\"name\":\"ProfileUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ServiceDonated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deRegisterNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"donations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAvatar\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getProfile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isERC721\",\"type\":\"bool\"}],\"name\":\"registerNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"avatarHash\",\"type\":\"string\"}],\"name\":\"setAvatar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"profileHash\",\"type\":\"string\"}],\"name\":\"setProfile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"avatarHash\",\"type\":\"string\"}],\"name\":\"updateAvatar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"profileHash\",\"type\":\"string\"}],\"name\":\"updateProfile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BCRAvatar.sol\":\"BCRAvatar\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\\n        external\\n        view\\n        returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xfce1eb6398eae0e2b50251140866a70a3106193f101972c878bba1dbf44929ec\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155.sol\\\";\\n\\n/**\\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155MetadataURI is IERC1155 {\\n    /**\\n     * @dev Returns the URI for token type `id`.\\n     *\\n     * If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by\\n     * clients with the actual token type ID.\\n     */\\n    function uri(uint256 id) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x6ba0564f6970414d1166ee83127b834bbe7dbf699241a3005eb7ae64a2211975\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n\\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\\n        require(currentAllowance >= amount, \\\"ERC20: transfer amount exceeds allowance\\\");\\n        unchecked {\\n            _approve(sender, _msgSender(), currentAllowance - amount);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        uint256 senderBalance = _balances[sender];\\n        require(senderBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[sender] = senderBalance - amount;\\n        }\\n        _balances[recipient] += amount;\\n\\n        emit Transfer(sender, recipient, amount);\\n\\n        _afterTokenTransfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x418cfe64226a974419f8ab7287ad4bb413156a4d7af8ab5d9bcaa5678d1a2f22\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xd32fb7f530a914b1083d10a6bed3a586f2451952fec04fe542bcc670a82f7ba5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"},\"contracts/BCRAvatar.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\n\\ncontract BCRAvatar is Ownable, ERC20 {\\n\\tstruct AvatarNFT {\\n\\t\\taddress _contract;\\n\\t\\tuint256 tokenId;\\n\\t\\tbool isERC721;\\n\\t}\\n\\n\\tevent AvatarCreated(address indexed account, string avatarURI);\\n\\tevent AvatarUpdated(address indexed account, string avatarURI);\\n\\tevent ProfileCreated(address indexed account, string profileURI);\\n\\tevent ProfileUpdated(address indexed account, string profileURI);\\n\\tevent NFTRegistered(address indexed account);\\n\\tevent NFTDeRegistered(address indexed account);\\n\\tevent ServiceDonated(address indexed account, uint256 amount);\\n\\n\\tstring public baseURI;\\n\\tmapping(address => uint256) public donations;\\n\\n\\tmapping(address => string) private avatars;\\n\\tmapping(address => string) private profiles;\\n\\tmapping(address => AvatarNFT) private avatarNFTs;\\n\\n\\tconstructor(string memory _baseURI) ERC20(\\\"Blockchain Registered Avatar\\\", \\\"BCRA\\\") {\\n\\t\\tbaseURI = _baseURI;\\n\\t}\\n\\n\\tfunction setBaseURI(string memory _baseURI) public onlyOwner {\\n\\t\\tbaseURI = _baseURI;\\n\\t}\\n\\n\\tfunction setAvatar(string memory avatarHash) public {\\n\\t\\trequire(bytes(avatars[msg.sender]).length == 0, \\\"Account already registered\\\");\\n\\t\\tavatars[msg.sender] = avatarHash;\\n\\t\\temit AvatarCreated(msg.sender, getAvatar(msg.sender));\\n\\t}\\n\\n\\tfunction getAvatar(address account) public view returns (string memory) {\\n\\t\\tif (avatarNFTs[account]._contract != address(0)) {\\n\\t\\t\\taddress _contract = avatarNFTs[account]._contract;\\n\\t\\t\\tuint256 tokenId = avatarNFTs[account].tokenId;\\n\\t\\t\\tif (avatarNFTs[account].isERC721) {\\n\\t\\t\\t\\tif (IERC721(_contract).ownerOf(tokenId) == account) {\\n\\t\\t\\t\\t\\treturn IERC721Metadata(_contract).tokenURI(tokenId);\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif (IERC1155(_contract).balanceOf(account, tokenId) > 0) {\\n\\t\\t\\t\\t\\treturn IERC1155MetadataURI(_contract).uri(tokenId);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tif (bytes(avatars[account]).length > 0) {\\n\\t\\t\\treturn string(abi.encodePacked(baseURI, avatars[account]));\\n\\t\\t} else {\\n\\t\\t\\treturn \\\"\\\";\\n\\t\\t}\\n\\t}\\n\\n\\tfunction updateAvatar(string memory avatarHash) public {\\n\\t\\trequire(bytes(avatars[msg.sender]).length != 0, \\\"Account not registered\\\");\\n\\t\\tavatars[msg.sender] = avatarHash;\\n\\t\\temit AvatarUpdated(msg.sender, getAvatar(msg.sender));\\n\\t}\\n\\n\\tfunction setProfile(string memory profileHash) public {\\n\\t\\trequire(bytes(profiles[msg.sender]).length == 0, \\\"Account already registered\\\");\\n\\t\\tprofiles[msg.sender] = profileHash;\\n\\t\\temit ProfileCreated(msg.sender, getProfile(msg.sender));\\n\\t}\\n\\n\\tfunction getProfile(address account) public view returns (string memory) {\\n\\t\\tif (bytes(profiles[account]).length > 0) {\\n\\t\\t\\treturn string(abi.encodePacked(baseURI, profiles[account]));\\n\\t\\t} else {\\n\\t\\t\\treturn \\\"\\\";\\n\\t\\t}\\n\\t}\\n\\n\\tfunction updateProfile(string memory profileHash) public {\\n\\t\\trequire(bytes(profiles[msg.sender]).length != 0, \\\"Account not registered\\\");\\n\\t\\tprofiles[msg.sender] = profileHash;\\n\\t\\temit ProfileUpdated(msg.sender, getProfile(msg.sender));\\n\\t}\\n\\n\\tfunction registerNFT(\\n\\t\\taddress _contract,\\n\\t\\tuint256 tokenId,\\n\\t\\tbool isERC721\\n\\t) public {\\n\\t\\tif (isERC721) {\\n\\t\\t\\trequire(IERC721(_contract).ownerOf(tokenId) == msg.sender, \\\"Owner invalid\\\");\\n\\t\\t} else {\\n\\t\\t\\trequire(IERC1155(_contract).balanceOf(msg.sender, tokenId) > 0, \\\"Balance insufficient\\\");\\n\\t\\t}\\n\\t\\tavatarNFTs[msg.sender] = AvatarNFT(_contract, tokenId, isERC721);\\n\\t\\temit NFTRegistered(msg.sender);\\n\\t}\\n\\n\\tfunction deRegisterNFT() public {\\n\\t\\trequire(avatarNFTs[msg.sender]._contract != address(0), \\\"NFT not registered\\\");\\n\\t\\tdelete avatarNFTs[msg.sender];\\n\\t\\temit NFTDeRegistered(msg.sender);\\n\\t}\\n\\n\\tfunction donate() public payable {\\n\\t\\trequire(msg.value > 0, \\\"Donation insufficient\\\");\\n\\t\\tsuper._mint(msg.sender, msg.value);\\n\\t\\tdonations[msg.sender] += msg.value;\\n\\t\\temit ServiceDonated(msg.sender, msg.value);\\n\\t}\\n\\n\\tfunction withdraw() public onlyOwner {\\n\\t\\trequire(address(this).balance > 0, \\\"Amount insufficient\\\");\\n\\t\\tpayable(owner()).transfer(address(this).balance);\\n\\t}\\n}\\n\",\"keccak256\":\"0x255de3d6771b72c81a754973043cfb57ae21f645a2f8bddefe34cfd6cbfeb29e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001f6d38038062001f6d8339810160408190526200003491620001e6565b6040518060400160405280601c81526020017f426c6f636b636861696e20526567697374657265642041766174617200000000815250604051806040016040528060048152602001634243524160e01b815250620000a16200009b620000ec60201b60201c565b620000f0565b8151620000b690600490602085019062000140565b508051620000cc90600590602084019062000140565b50508151620000e49150600690602084019062000140565b50506200030f565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546200014e90620002bc565b90600052602060002090601f016020900481019282620001725760008555620001bd565b82601f106200018d57805160ff1916838001178555620001bd565b82800160010185558215620001bd579182015b82811115620001bd578251825591602001919060010190620001a0565b50620001cb929150620001cf565b5090565b5b80821115620001cb5760008155600101620001d0565b60006020808385031215620001f9578182fd5b82516001600160401b038082111562000210578384fd5b818501915085601f83011262000224578384fd5b815181811115620002395762000239620002f9565b604051601f8201601f19908116603f01168101908382118183101715620002645762000264620002f9565b8160405282815288868487010111156200027c578687fd5b8693505b828410156200029f578484018601518185018701529285019262000280565b82841115620002b057868684830101525b98975050505050505050565b600181811c90821680620002d157607f821691505b60208210811415620002f357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b611c4e806200031f6000396000f3fe60806040526004361061019b5760003560e01c806370a08231116100ec578063cc6cb19a1161008a578063dd62ed3e11610064578063dd62ed3e14610497578063ed88c68e146104dd578063f2fde38b146104e5578063fd4485b91461050557600080fd5b8063cc6cb19a1461042a578063ce8ac03314610457578063dbd183831461047757600080fd5b806395d89b41116100c657806395d89b41146103b55780639fe958b9146103ca578063a457c2d7146103ea578063a9059cbb1461040a57600080fd5b806370a0823114610342578063715018a6146103785780638da5cb5b1461038d57600080fd5b806323b872dd116101595780633ccfd60b116101335780633ccfd60b146102d857806355f804b3146102ed5780636c0360eb1461030d5780636ec5239f1461032257600080fd5b806323b872dd1461027c578063313ce5671461029c57806339509351146102b857600080fd5b80629299e3146101a057806306fdde03146101c2578063095ea7b3146101ed5780630f53a4701461021d57806318160ddd1461023d578063235b37b11461025c575b600080fd5b3480156101ac57600080fd5b506101c06101bb3660046118f0565b61051a565b005b3480156101ce57600080fd5b506101d76105e6565b6040516101e49190611aa1565b60405180910390f35b3480156101f957600080fd5b5061020d610208366004611880565b610678565b60405190151581526020016101e4565b34801561022957600080fd5b506101d76102383660046117c9565b61068e565b34801561024957600080fd5b506003545b6040519081526020016101e4565b34801561026857600080fd5b506101c06102773660046118f0565b610715565b34801561028857600080fd5b5061020d610297366004611840565b6107ca565b3480156102a857600080fd5b50604051601281526020016101e4565b3480156102c457600080fd5b5061020d6102d3366004611880565b610874565b3480156102e457600080fd5b506101c06108b0565b3480156102f957600080fd5b506101c06103083660046118f0565b61095d565b34801561031957600080fd5b506101d761099e565b34801561032e57600080fd5b506101c061033d3660046118f0565b610a2c565b34801561034e57600080fd5b5061024e61035d3660046117c9565b6001600160a01b031660009081526001602052604090205490565b34801561038457600080fd5b506101c0610ae1565b34801561039957600080fd5b506000546040516001600160a01b0390911681526020016101e4565b3480156103c157600080fd5b506101d7610b17565b3480156103d657600080fd5b506101c06103e53660046118f0565b610b26565b3480156103f657600080fd5b5061020d610405366004611880565b610bd5565b34801561041657600080fd5b5061020d610425366004611880565b610c6e565b34801561043657600080fd5b5061024e6104453660046117c9565b60076020526000908152604090205481565b34801561046357600080fd5b506101d76104723660046117c9565b610c7b565b34801561048357600080fd5b506101c06104923660046118ab565b610ef5565b3480156104a357600080fd5b5061024e6104b2366004611808565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6101c0611117565b3480156104f157600080fd5b506101c06105003660046117c9565b6111c4565b34801561051157600080fd5b506101c061125c565b336000908152600960205260409020805461053490611bb2565b151590506105825760405162461bcd60e51b81526020600482015260166024820152751058d8dbdd5b9d081b9bdd081c9959da5cdd195c995960521b60448201526064015b60405180910390fd5b33600090815260096020908152604090912082516105a292840190611730565b50337fdd635a4cd84864e37e4479dbfc2ec667acfa473c83c8422a8ac9d9d07599b01c6105ce8261068e565b6040516105db9190611aa1565b60405180910390a250565b6060600480546105f590611bb2565b80601f016020809104026020016040519081016040528092919081815260200182805461062190611bb2565b801561066e5780601f106106435761010080835404028352916020019161066e565b820191906000526020600020905b81548152906001019060200180831161065157829003601f168201915b5050505050905090565b600061068533848461130d565b50600192915050565b6001600160a01b0381166000908152600960205260408120805460609291906106b690611bb2565b90501115610701576001600160a01b03821660009081526009602090815260409182902091516106eb92600692909101611a8c565b6040516020818303038152906040529050919050565b505060408051602081019091526000815290565b336000908152600960205260409020805461072f90611bb2565b15905061077e5760405162461bcd60e51b815260206004820152601a60248201527f4163636f756e7420616c726561647920726567697374657265640000000000006044820152606401610579565b336000908152600960209081526040909120825161079e92840190611730565b50337fbafddecbd1dec1c1afb76d693f1de16901f521bdf29a02438e3e6806c0b8d9486105ce8261068e565b60006107d7848484611431565b6001600160a01b03841660009081526002602090815260408083203384529091529020548281101561085c5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608401610579565b610869853385840361130d565b506001949350505050565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916106859185906108ab908690611b62565b61130d565b6000546001600160a01b031633146108da5760405162461bcd60e51b815260040161057990611ad4565b600047116109205760405162461bcd60e51b8152602060048201526013602482015272105b5bdd5b9d081a5b9cdd59999a58da595b9d606a1b6044820152606401610579565b600080546040516001600160a01b03909116914780156108fc02929091818181858888f1935050505015801561095a573d6000803e3d6000fd5b50565b6000546001600160a01b031633146109875760405162461bcd60e51b815260040161057990611ad4565b805161099a906006906020840190611730565b5050565b600680546109ab90611bb2565b80601f01602080910402602001604051908101604052809291908181526020018280546109d790611bb2565b8015610a245780601f106109f957610100808354040283529160200191610a24565b820191906000526020600020905b815481529060010190602001808311610a0757829003601f168201915b505050505081565b3360009081526008602052604090208054610a4690611bb2565b159050610a955760405162461bcd60e51b815260206004820152601a60248201527f4163636f756e7420616c726561647920726567697374657265640000000000006044820152606401610579565b3360009081526008602090815260409091208251610ab592840190611730565b50337f713b884fa85d657dab3084902090821951d956678e51a03b2a550a0a39c063f36105ce82610c7b565b6000546001600160a01b03163314610b0b5760405162461bcd60e51b815260040161057990611ad4565b610b156000611601565b565b6060600580546105f590611bb2565b3360009081526008602052604090208054610b4090611bb2565b15159050610b895760405162461bcd60e51b81526020600482015260166024820152751058d8dbdd5b9d081b9bdd081c9959da5cdd195c995960521b6044820152606401610579565b3360009081526008602090815260409091208251610ba992840190611730565b50337fed6fbee54fb754678a908527ed51cf00840e56cca6b00760c99382dccf6866f96105ce82610c7b565b3360009081526002602090815260408083206001600160a01b038616845290915281205482811015610c575760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610579565b610c64338585840361130d565b5060019392505050565b6000610685338484611431565b6001600160a01b038181166000908152600a60205260409020546060911615610e9d576001600160a01b038083166000908152600a602052604090208054600182015460029092015492169160ff1615610de5576040516331a9108f60e11b8152600481018290526001600160a01b038086169190841690636352211e9060240160206040518083038186803b158015610d1457600080fd5b505afa158015610d28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4c91906117ec565b6001600160a01b03161415610de05760405163c87b56dd60e01b8152600481018290526001600160a01b0383169063c87b56dd906024015b60006040518083038186803b158015610d9c57600080fd5b505afa158015610db0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610dd89190810190611969565b949350505050565b610e9a565b604051627eeac760e11b81526001600160a01b038581166004830152602482018390526000919084169062fdd58e9060440160206040518083038186803b158015610e2f57600080fd5b505afa158015610e43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6791906119dc565b1115610e9a576040516303a24d0760e21b8152600481018290526001600160a01b03831690630e89341c90602401610d84565b50505b6001600160a01b03821660009081526008602052604081208054610ec090611bb2565b90501115610701576001600160a01b03821660009081526008602090815260409182902091516106eb92600692909101611a8c565b8015610fc0576040516331a9108f60e11b81526004810183905233906001600160a01b03851690636352211e9060240160206040518083038186803b158015610f3d57600080fd5b505afa158015610f51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7591906117ec565b6001600160a01b031614610fbb5760405162461bcd60e51b815260206004820152600d60248201526c13dddb995c881a5b9d985b1a59609a1b6044820152606401610579565b611083565b604051627eeac760e11b8152336004820152602481018390526000906001600160a01b0385169062fdd58e9060440160206040518083038186803b15801561100757600080fd5b505afa15801561101b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103f91906119dc565b116110835760405162461bcd60e51b815260206004820152601460248201527310985b185b98d9481a5b9cdd59999a58da595b9d60621b6044820152606401610579565b604080516060810182526001600160a01b0385811682526020808301868152851515848601908152336000818152600a909452868420955186546001600160a01b031916951694909417855590516001850155516002909301805460ff19169315159390931790925591517febbf08e0c6f72650cd47fd7a287defcf3b872b6c42d317a2a7a86ec62e394ffd9190a2505050565b6000341161115f5760405162461bcd60e51b8152602060048201526015602482015274111bdb985d1a5bdb881a5b9cdd59999a58da595b9d605a1b6044820152606401610579565b6111693334611651565b3360009081526007602052604081208054349290611188908490611b62565b909155505060405134815233907f468bb967b2a541c62b036ff215eec60aeec51236016d6250a405472a36d4edec9060200160405180910390a2565b6000546001600160a01b031633146111ee5760405162461bcd60e51b815260040161057990611ad4565b6001600160a01b0381166112535760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610579565b61095a81611601565b336000908152600a60205260409020546001600160a01b03166112b65760405162461bcd60e51b8152602060048201526012602482015271139195081b9bdd081c9959da5cdd195c995960721b6044820152606401610579565b336000818152600a602052604080822080546001600160a01b031916815560018101839055600201805460ff19169055517fb63279298e3ac7072c4faab7d32ee749119d951fc3d598b92bd9640546a543d19190a2565b6001600160a01b03831661136f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610579565b6001600160a01b0382166113d05760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610579565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166114955760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610579565b6001600160a01b0382166114f75760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610579565b6001600160a01b0383166000908152600160205260409020548181101561156f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610579565b6001600160a01b038085166000908152600160205260408082208585039055918516815290812080548492906115a6908490611b62565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516115f291815260200190565b60405180910390a35b50505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0382166116a75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610579565b80600360008282546116b99190611b62565b90915550506001600160a01b038216600090815260016020526040812080548392906116e6908490611b62565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b82805461173c90611bb2565b90600052602060002090601f01602090048101928261175e57600085556117a4565b82601f1061177757805160ff19168380011785556117a4565b828001600101855582156117a4579182015b828111156117a4578251825591602001919060010190611789565b506117b09291506117b4565b5090565b5b808211156117b057600081556001016117b5565b6000602082840312156117da578081fd5b81356117e581611c03565b9392505050565b6000602082840312156117fd578081fd5b81516117e581611c03565b6000806040838503121561181a578081fd5b823561182581611c03565b9150602083013561183581611c03565b809150509250929050565b600080600060608486031215611854578081fd5b833561185f81611c03565b9250602084013561186f81611c03565b929592945050506040919091013590565b60008060408385031215611892578182fd5b823561189d81611c03565b946020939093013593505050565b6000806000606084860312156118bf578283fd5b83356118ca81611c03565b925060208401359150604084013580151581146118e5578182fd5b809150509250925092565b600060208284031215611901578081fd5b813567ffffffffffffffff811115611917578182fd5b8201601f81018413611927578182fd5b803561193a61193582611b3a565b611b09565b81815285602083850101111561194e578384fd5b81602084016020830137908101602001929092525092915050565b60006020828403121561197a578081fd5b815167ffffffffffffffff811115611990578182fd5b8201601f810184136119a0578182fd5b80516119ae61193582611b3a565b8181528560208385010111156119c2578384fd5b6119d3826020830160208601611b86565b95945050505050565b6000602082840312156119ed578081fd5b5051919050565b8054600090600181811c9080831680611a0e57607f831692505b6020808410821415611a2e57634e487b7160e01b86526022600452602486fd5b818015611a425760018114611a5357611a80565b60ff19861689528489019650611a80565b60008881526020902060005b86811015611a785781548b820152908501908301611a5f565b505084890196505b50505050505092915050565b6000610dd8611a9b83866119f4565b846119f4565b6020815260008251806020840152611ac0816040850160208701611b86565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b604051601f8201601f1916810167ffffffffffffffff81118282101715611b3257611b32611bed565b604052919050565b600067ffffffffffffffff821115611b5457611b54611bed565b50601f01601f191660200190565b60008219821115611b8157634e487b7160e01b81526011600452602481fd5b500190565b60005b83811015611ba1578181015183820152602001611b89565b838111156115fb5750506000910152565b600181811c90821680611bc657607f821691505b60208210811415611be757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461095a57600080fdfea264697066735822122050d65dcc2e4c56e0b5533f4fc00a67309a68af918383c576aa2e8d33bda74b3864736f6c63430008040033",
  "deployedBytecode": "0x60806040526004361061019b5760003560e01c806370a08231116100ec578063cc6cb19a1161008a578063dd62ed3e11610064578063dd62ed3e14610497578063ed88c68e146104dd578063f2fde38b146104e5578063fd4485b91461050557600080fd5b8063cc6cb19a1461042a578063ce8ac03314610457578063dbd183831461047757600080fd5b806395d89b41116100c657806395d89b41146103b55780639fe958b9146103ca578063a457c2d7146103ea578063a9059cbb1461040a57600080fd5b806370a0823114610342578063715018a6146103785780638da5cb5b1461038d57600080fd5b806323b872dd116101595780633ccfd60b116101335780633ccfd60b146102d857806355f804b3146102ed5780636c0360eb1461030d5780636ec5239f1461032257600080fd5b806323b872dd1461027c578063313ce5671461029c57806339509351146102b857600080fd5b80629299e3146101a057806306fdde03146101c2578063095ea7b3146101ed5780630f53a4701461021d57806318160ddd1461023d578063235b37b11461025c575b600080fd5b3480156101ac57600080fd5b506101c06101bb3660046118f0565b61051a565b005b3480156101ce57600080fd5b506101d76105e6565b6040516101e49190611aa1565b60405180910390f35b3480156101f957600080fd5b5061020d610208366004611880565b610678565b60405190151581526020016101e4565b34801561022957600080fd5b506101d76102383660046117c9565b61068e565b34801561024957600080fd5b506003545b6040519081526020016101e4565b34801561026857600080fd5b506101c06102773660046118f0565b610715565b34801561028857600080fd5b5061020d610297366004611840565b6107ca565b3480156102a857600080fd5b50604051601281526020016101e4565b3480156102c457600080fd5b5061020d6102d3366004611880565b610874565b3480156102e457600080fd5b506101c06108b0565b3480156102f957600080fd5b506101c06103083660046118f0565b61095d565b34801561031957600080fd5b506101d761099e565b34801561032e57600080fd5b506101c061033d3660046118f0565b610a2c565b34801561034e57600080fd5b5061024e61035d3660046117c9565b6001600160a01b031660009081526001602052604090205490565b34801561038457600080fd5b506101c0610ae1565b34801561039957600080fd5b506000546040516001600160a01b0390911681526020016101e4565b3480156103c157600080fd5b506101d7610b17565b3480156103d657600080fd5b506101c06103e53660046118f0565b610b26565b3480156103f657600080fd5b5061020d610405366004611880565b610bd5565b34801561041657600080fd5b5061020d610425366004611880565b610c6e565b34801561043657600080fd5b5061024e6104453660046117c9565b60076020526000908152604090205481565b34801561046357600080fd5b506101d76104723660046117c9565b610c7b565b34801561048357600080fd5b506101c06104923660046118ab565b610ef5565b3480156104a357600080fd5b5061024e6104b2366004611808565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6101c0611117565b3480156104f157600080fd5b506101c06105003660046117c9565b6111c4565b34801561051157600080fd5b506101c061125c565b336000908152600960205260409020805461053490611bb2565b151590506105825760405162461bcd60e51b81526020600482015260166024820152751058d8dbdd5b9d081b9bdd081c9959da5cdd195c995960521b60448201526064015b60405180910390fd5b33600090815260096020908152604090912082516105a292840190611730565b50337fdd635a4cd84864e37e4479dbfc2ec667acfa473c83c8422a8ac9d9d07599b01c6105ce8261068e565b6040516105db9190611aa1565b60405180910390a250565b6060600480546105f590611bb2565b80601f016020809104026020016040519081016040528092919081815260200182805461062190611bb2565b801561066e5780601f106106435761010080835404028352916020019161066e565b820191906000526020600020905b81548152906001019060200180831161065157829003601f168201915b5050505050905090565b600061068533848461130d565b50600192915050565b6001600160a01b0381166000908152600960205260408120805460609291906106b690611bb2565b90501115610701576001600160a01b03821660009081526009602090815260409182902091516106eb92600692909101611a8c565b6040516020818303038152906040529050919050565b505060408051602081019091526000815290565b336000908152600960205260409020805461072f90611bb2565b15905061077e5760405162461bcd60e51b815260206004820152601a60248201527f4163636f756e7420616c726561647920726567697374657265640000000000006044820152606401610579565b336000908152600960209081526040909120825161079e92840190611730565b50337fbafddecbd1dec1c1afb76d693f1de16901f521bdf29a02438e3e6806c0b8d9486105ce8261068e565b60006107d7848484611431565b6001600160a01b03841660009081526002602090815260408083203384529091529020548281101561085c5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608401610579565b610869853385840361130d565b506001949350505050565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916106859185906108ab908690611b62565b61130d565b6000546001600160a01b031633146108da5760405162461bcd60e51b815260040161057990611ad4565b600047116109205760405162461bcd60e51b8152602060048201526013602482015272105b5bdd5b9d081a5b9cdd59999a58da595b9d606a1b6044820152606401610579565b600080546040516001600160a01b03909116914780156108fc02929091818181858888f1935050505015801561095a573d6000803e3d6000fd5b50565b6000546001600160a01b031633146109875760405162461bcd60e51b815260040161057990611ad4565b805161099a906006906020840190611730565b5050565b600680546109ab90611bb2565b80601f01602080910402602001604051908101604052809291908181526020018280546109d790611bb2565b8015610a245780601f106109f957610100808354040283529160200191610a24565b820191906000526020600020905b815481529060010190602001808311610a0757829003601f168201915b505050505081565b3360009081526008602052604090208054610a4690611bb2565b159050610a955760405162461bcd60e51b815260206004820152601a60248201527f4163636f756e7420616c726561647920726567697374657265640000000000006044820152606401610579565b3360009081526008602090815260409091208251610ab592840190611730565b50337f713b884fa85d657dab3084902090821951d956678e51a03b2a550a0a39c063f36105ce82610c7b565b6000546001600160a01b03163314610b0b5760405162461bcd60e51b815260040161057990611ad4565b610b156000611601565b565b6060600580546105f590611bb2565b3360009081526008602052604090208054610b4090611bb2565b15159050610b895760405162461bcd60e51b81526020600482015260166024820152751058d8dbdd5b9d081b9bdd081c9959da5cdd195c995960521b6044820152606401610579565b3360009081526008602090815260409091208251610ba992840190611730565b50337fed6fbee54fb754678a908527ed51cf00840e56cca6b00760c99382dccf6866f96105ce82610c7b565b3360009081526002602090815260408083206001600160a01b038616845290915281205482811015610c575760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610579565b610c64338585840361130d565b5060019392505050565b6000610685338484611431565b6001600160a01b038181166000908152600a60205260409020546060911615610e9d576001600160a01b038083166000908152600a602052604090208054600182015460029092015492169160ff1615610de5576040516331a9108f60e11b8152600481018290526001600160a01b038086169190841690636352211e9060240160206040518083038186803b158015610d1457600080fd5b505afa158015610d28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4c91906117ec565b6001600160a01b03161415610de05760405163c87b56dd60e01b8152600481018290526001600160a01b0383169063c87b56dd906024015b60006040518083038186803b158015610d9c57600080fd5b505afa158015610db0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610dd89190810190611969565b949350505050565b610e9a565b604051627eeac760e11b81526001600160a01b038581166004830152602482018390526000919084169062fdd58e9060440160206040518083038186803b158015610e2f57600080fd5b505afa158015610e43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6791906119dc565b1115610e9a576040516303a24d0760e21b8152600481018290526001600160a01b03831690630e89341c90602401610d84565b50505b6001600160a01b03821660009081526008602052604081208054610ec090611bb2565b90501115610701576001600160a01b03821660009081526008602090815260409182902091516106eb92600692909101611a8c565b8015610fc0576040516331a9108f60e11b81526004810183905233906001600160a01b03851690636352211e9060240160206040518083038186803b158015610f3d57600080fd5b505afa158015610f51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7591906117ec565b6001600160a01b031614610fbb5760405162461bcd60e51b815260206004820152600d60248201526c13dddb995c881a5b9d985b1a59609a1b6044820152606401610579565b611083565b604051627eeac760e11b8152336004820152602481018390526000906001600160a01b0385169062fdd58e9060440160206040518083038186803b15801561100757600080fd5b505afa15801561101b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103f91906119dc565b116110835760405162461bcd60e51b815260206004820152601460248201527310985b185b98d9481a5b9cdd59999a58da595b9d60621b6044820152606401610579565b604080516060810182526001600160a01b0385811682526020808301868152851515848601908152336000818152600a909452868420955186546001600160a01b031916951694909417855590516001850155516002909301805460ff19169315159390931790925591517febbf08e0c6f72650cd47fd7a287defcf3b872b6c42d317a2a7a86ec62e394ffd9190a2505050565b6000341161115f5760405162461bcd60e51b8152602060048201526015602482015274111bdb985d1a5bdb881a5b9cdd59999a58da595b9d605a1b6044820152606401610579565b6111693334611651565b3360009081526007602052604081208054349290611188908490611b62565b909155505060405134815233907f468bb967b2a541c62b036ff215eec60aeec51236016d6250a405472a36d4edec9060200160405180910390a2565b6000546001600160a01b031633146111ee5760405162461bcd60e51b815260040161057990611ad4565b6001600160a01b0381166112535760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610579565b61095a81611601565b336000908152600a60205260409020546001600160a01b03166112b65760405162461bcd60e51b8152602060048201526012602482015271139195081b9bdd081c9959da5cdd195c995960721b6044820152606401610579565b336000818152600a602052604080822080546001600160a01b031916815560018101839055600201805460ff19169055517fb63279298e3ac7072c4faab7d32ee749119d951fc3d598b92bd9640546a543d19190a2565b6001600160a01b03831661136f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610579565b6001600160a01b0382166113d05760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610579565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166114955760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610579565b6001600160a01b0382166114f75760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610579565b6001600160a01b0383166000908152600160205260409020548181101561156f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610579565b6001600160a01b038085166000908152600160205260408082208585039055918516815290812080548492906115a6908490611b62565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516115f291815260200190565b60405180910390a35b50505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0382166116a75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610579565b80600360008282546116b99190611b62565b90915550506001600160a01b038216600090815260016020526040812080548392906116e6908490611b62565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b82805461173c90611bb2565b90600052602060002090601f01602090048101928261175e57600085556117a4565b82601f1061177757805160ff19168380011785556117a4565b828001600101855582156117a4579182015b828111156117a4578251825591602001919060010190611789565b506117b09291506117b4565b5090565b5b808211156117b057600081556001016117b5565b6000602082840312156117da578081fd5b81356117e581611c03565b9392505050565b6000602082840312156117fd578081fd5b81516117e581611c03565b6000806040838503121561181a578081fd5b823561182581611c03565b9150602083013561183581611c03565b809150509250929050565b600080600060608486031215611854578081fd5b833561185f81611c03565b9250602084013561186f81611c03565b929592945050506040919091013590565b60008060408385031215611892578182fd5b823561189d81611c03565b946020939093013593505050565b6000806000606084860312156118bf578283fd5b83356118ca81611c03565b925060208401359150604084013580151581146118e5578182fd5b809150509250925092565b600060208284031215611901578081fd5b813567ffffffffffffffff811115611917578182fd5b8201601f81018413611927578182fd5b803561193a61193582611b3a565b611b09565b81815285602083850101111561194e578384fd5b81602084016020830137908101602001929092525092915050565b60006020828403121561197a578081fd5b815167ffffffffffffffff811115611990578182fd5b8201601f810184136119a0578182fd5b80516119ae61193582611b3a565b8181528560208385010111156119c2578384fd5b6119d3826020830160208601611b86565b95945050505050565b6000602082840312156119ed578081fd5b5051919050565b8054600090600181811c9080831680611a0e57607f831692505b6020808410821415611a2e57634e487b7160e01b86526022600452602486fd5b818015611a425760018114611a5357611a80565b60ff19861689528489019650611a80565b60008881526020902060005b86811015611a785781548b820152908501908301611a5f565b505084890196505b50505050505092915050565b6000610dd8611a9b83866119f4565b846119f4565b6020815260008251806020840152611ac0816040850160208701611b86565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b604051601f8201601f1916810167ffffffffffffffff81118282101715611b3257611b32611bed565b604052919050565b600067ffffffffffffffff821115611b5457611b54611bed565b50601f01601f191660200190565b60008219821115611b8157634e487b7160e01b81526011600452602481fd5b500190565b60005b83811015611ba1578181015183820152602001611b89565b838111156115fb5750506000910152565b600181811c90821680611bc657607f821691505b60208210811415611be757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461095a57600080fdfea264697066735822122050d65dcc2e4c56e0b5533f4fc00a67309a68af918383c576aa2e8d33bda74b3864736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/BCRAvatar.sol:BCRAvatar",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1382,
        "contract": "contracts/BCRAvatar.sol:BCRAvatar",
        "label": "_balances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1388,
        "contract": "contracts/BCRAvatar.sol:BCRAvatar",
        "label": "_allowances",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 1390,
        "contract": "contracts/BCRAvatar.sol:BCRAvatar",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 1392,
        "contract": "contracts/BCRAvatar.sol:BCRAvatar",
        "label": "_name",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 1394,
        "contract": "contracts/BCRAvatar.sol:BCRAvatar",
        "label": "_symbol",
        "offset": 0,
        "slot": "5",
        "type": "t_string_storage"
      },
      {
        "astId": 3810,
        "contract": "contracts/BCRAvatar.sol:BCRAvatar",
        "label": "baseURI",
        "offset": 0,
        "slot": "6",
        "type": "t_string_storage"
      },
      {
        "astId": 3814,
        "contract": "contracts/BCRAvatar.sol:BCRAvatar",
        "label": "donations",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 3818,
        "contract": "contracts/BCRAvatar.sol:BCRAvatar",
        "label": "avatars",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_string_storage)"
      },
      {
        "astId": 3822,
        "contract": "contracts/BCRAvatar.sol:BCRAvatar",
        "label": "profiles",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_string_storage)"
      },
      {
        "astId": 3827,
        "contract": "contracts/BCRAvatar.sol:BCRAvatar",
        "label": "avatarNFTs",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_struct(AvatarNFT)3770_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_address,t_struct(AvatarNFT)3770_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct BCRAvatar.AvatarNFT)",
        "numberOfBytes": "32",
        "value": "t_struct(AvatarNFT)3770_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(AvatarNFT)3770_storage": {
        "encoding": "inplace",
        "label": "struct BCRAvatar.AvatarNFT",
        "members": [
          {
            "astId": 3765,
            "contract": "contracts/BCRAvatar.sol:BCRAvatar",
            "label": "_contract",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 3767,
            "contract": "contracts/BCRAvatar.sol:BCRAvatar",
            "label": "tokenId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 3769,
            "contract": "contracts/BCRAvatar.sol:BCRAvatar",
            "label": "isERC721",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}